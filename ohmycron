#!/bin/bash
set -o errexit -o nounset -o pipefail
function -h {
cat <<USAGE
 USAGE: ohmycron <job-name> <cmd> <arg>*

  Log the job to Syslog, lock it and load the user environment.

USAGE
}; function --help { -h ;}                 # A nice way to handle -h and --help
export LC_ALL=en_US.UTF-8                    # A locale that works consistently
export PATH=/usr/local/bin:"$PATH"

function main {
  local name="$1"; shift
  local lock=/tmp/ohmycron~"$(whoami)"/"$name"
  exec 1> >(exec logger -t "$name[$$]" -p user.info)
  exec 2> >(exec logger -t "$name[$$]" -p user.notice)
  mkdir -p "$(dirname "$lock")"
  if flock -nx 9
  then
    for rc in /etc/profile /etc/bashrc ~/.profile ~/.bashrc
    do
      [[ -s $rc ]] || continue
      set +o errexit +o nounset +o pipefail
      source "$rc"
      set -o errexit -o nounset -o pipefail
    done
    out "pid $$ at $(date -u +%FT%TZ)" > "$lock"
    exec "$@"
  else
    [[ ! -s $lock ]] || msg "Previous lock holder: $(< "$lock")"
    err "Failed to lock $lock; is another copy running?"
  fi 9>> "$lock"
}

##################################################################### Utilities
function msg { out "$*" >&2 ;}
function err { local x=$? ; msg "$*" ; return $(( $x == 0 ? 1 : $x )) ;}
function out { printf '%s\n' "$*" ;}

######################### Delegates to subcommands or runs main, as appropriate
if declare -f -- "${1:-}" >/dev/null
then "$@"
else main "$@"
fi
